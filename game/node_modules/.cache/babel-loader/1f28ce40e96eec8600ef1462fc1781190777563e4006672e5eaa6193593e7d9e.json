{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sra1e\\\\Downloads\\\\Satya\\\\Something\\\\game\\\\src\\\\Graph\\\\CumulativeFlowGraph.js\";\nimport React from \"react\";\nimport { VictoryChart, VictoryArea, VictoryAxis, VictoryLegend } from \"victory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CumulativeFlowGraph = _ref => {\n  let {\n    data\n  } = _ref;\n  const labels = Object.keys(data[0]).slice(1);\n  const colors = [\"#FF8C00\", \"#DC143C\", \"#4169E1\", \"#008000\", \"#FFD700\"];\n  const legendData = labels.map((label, index) => ({\n    name: label,\n    symbol: {\n      fill: colors[index],\n      type: \"square\"\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(VictoryChart, {\n    children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {\n      tickFormat: x => `Iteration ${x}`,\n      style: {\n        axisLabel: {\n          fontSize: 10,\n          fill: \"white\"\n        },\n        tickLabels: {\n          fontSize: 10,\n          fill: \"deeppink\"\n        },\n        axis: {\n          stroke: \"blue\",\n          strokeWidth: 2,\n          strokeDasharray: \"4 4\",\n          strokeLinecap: \"round\"\n        }\n      },\n      label: \"X Axis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VictoryAxis, {\n      dependentAxis: true,\n      style: {\n        axisLabel: {\n          fontSize: 10,\n          fill: \"white\"\n        },\n        tickLabels: {\n          fontSize: 10,\n          fill: \"deeppink\"\n        },\n        axis: {\n          stroke: \"blue\",\n          strokeWidth: 2,\n          strokeDasharray: \"4 4\",\n          strokeLinecap: \"round\"\n        }\n      },\n      label: \"Y Axis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), labels.map((label, index) => /*#__PURE__*/_jsxDEV(VictoryArea, {\n      data: data.map(datum => ({\n        x: datum.date,\n        y: datum[label]\n      })),\n      style: {\n        data: {\n          fill: colors[index],\n          stroke: colors[index],\n          strokeWidth: 2\n        }\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(VictoryLegend, {\n      x: 10,\n      y: 10,\n      orientation: \"horizontal\",\n      gutter: 10,\n      data: legendData,\n      style: {\n        labels: {\n          fontSize: 10,\n          fill: \"white\"\n        },\n        title: {\n          fill: \"white\"\n        },\n        border: {\n          stroke: \"white\"\n        },\n        fill: \"white\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = CumulativeFlowGraph;\nexport default CumulativeFlowGraph;\nvar _c;\n$RefreshReg$(_c, \"CumulativeFlowGraph\");","map":{"version":3,"names":["React","VictoryChart","VictoryArea","VictoryAxis","VictoryLegend","jsxDEV","_jsxDEV","CumulativeFlowGraph","_ref","data","labels","Object","keys","slice","colors","legendData","map","label","index","name","symbol","fill","type","children","tickFormat","x","style","axisLabel","fontSize","tickLabels","axis","stroke","strokeWidth","strokeDasharray","strokeLinecap","fileName","_jsxFileName","lineNumber","columnNumber","dependentAxis","datum","date","y","orientation","gutter","title","border","_c","$RefreshReg$"],"sources":["C:/Users/sra1e/Downloads/Satya/Something/game/src/Graph/CumulativeFlowGraph.js"],"sourcesContent":["import React from \"react\";\r\nimport { VictoryChart, VictoryArea, VictoryAxis, VictoryLegend } from \"victory\";\r\n\r\nconst CumulativeFlowGraph = ({ data }) => {\r\n  const labels = Object.keys(data[0]).slice(1);\r\n  const colors = [\"#FF8C00\", \"#DC143C\", \"#4169E1\", \"#008000\", \"#FFD700\"];\r\n\r\n  const legendData = labels.map((label, index) => ({\r\n    name: label,\r\n    symbol: {\r\n      fill: colors[index],\r\n      type: \"square\"\r\n    }\r\n  }));\r\n\r\n  return (\r\n    <VictoryChart>\r\n      <VictoryAxis\r\n        tickFormat={(x) => `Iteration ${x}`}\r\n        style={{\r\n          axisLabel: { fontSize: 10, fill: \"white\" },\r\n          tickLabels: { fontSize: 10, fill: \"deeppink\" },\r\n          axis: { stroke: \"blue\", strokeWidth: 2, strokeDasharray: \"4 4\", strokeLinecap: \"round\" }\r\n        }}\r\n        label=\"X Axis\"\r\n      />\r\n      <VictoryAxis\r\n        dependentAxis\r\n        style={{\r\n          axisLabel: { fontSize: 10, fill: \"white\" },\r\n          tickLabels: { fontSize: 10, fill: \"deeppink\" },\r\n          axis: { stroke: \"blue\", strokeWidth: 2, strokeDasharray: \"4 4\", strokeLinecap: \"round\" }\r\n        }}\r\n        label=\"Y Axis\"\r\n      />\r\n      {labels.map((label, index) => (\r\n        <VictoryArea\r\n          key={index}\r\n          data={data.map((datum) => ({\r\n            x: datum.date,\r\n            y: datum[label]\r\n          }))}\r\n          style={{\r\n            data: {\r\n              fill: colors[index],\r\n              stroke: colors[index],\r\n              strokeWidth: 2\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n      <VictoryLegend\r\n        x={10}\r\n        y={10}\r\n        orientation=\"horizontal\"\r\n        gutter={10}\r\n        data={legendData}\r\n        style={{\r\n          labels: { fontSize: 10, fill: \"white\" },\r\n          title: { fill: \"white\" },\r\n          border: { stroke: \"white\" },\r\n          fill: \"white\"\r\n        }}\r\n      />\r\n    </VictoryChart>\r\n  );\r\n};\r\n\r\nexport default CumulativeFlowGraph;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,mBAAmB,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACnC,MAAME,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC;EAC5C,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEtE,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;IAC/CC,IAAI,EAAEF,KAAK;IACXG,MAAM,EAAE;MACNC,IAAI,EAAEP,MAAM,CAACI,KAAK,CAAC;MACnBI,IAAI,EAAE;IACR;EACF,CAAC,CAAC,CAAC;EAEH,oBACEhB,OAAA,CAACL,YAAY;IAAAsB,QAAA,gBACXjB,OAAA,CAACH,WAAW;MACVqB,UAAU,EAAGC,CAAC,IAAM,aAAYA,CAAE,EAAE;MACpCC,KAAK,EAAE;QACLC,SAAS,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEP,IAAI,EAAE;QAAQ,CAAC;QAC1CQ,UAAU,EAAE;UAAED,QAAQ,EAAE,EAAE;UAAEP,IAAI,EAAE;QAAW,CAAC;QAC9CS,IAAI,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,WAAW,EAAE,CAAC;UAAEC,eAAe,EAAE,KAAK;UAAEC,aAAa,EAAE;QAAQ;MACzF,CAAE;MACFjB,KAAK,EAAC;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,eACFhC,OAAA,CAACH,WAAW;MACVoC,aAAa;MACbb,KAAK,EAAE;QACLC,SAAS,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEP,IAAI,EAAE;QAAQ,CAAC;QAC1CQ,UAAU,EAAE;UAAED,QAAQ,EAAE,EAAE;UAAEP,IAAI,EAAE;QAAW,CAAC;QAC9CS,IAAI,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,WAAW,EAAE,CAAC;UAAEC,eAAe,EAAE,KAAK;UAAEC,aAAa,EAAE;QAAQ;MACzF,CAAE;MACFjB,KAAK,EAAC;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,EACD5B,MAAM,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBZ,OAAA,CAACJ,WAAW;MAEVO,IAAI,EAAEA,IAAI,CAACO,GAAG,CAAEwB,KAAK,KAAM;QACzBf,CAAC,EAAEe,KAAK,CAACC,IAAI;QACbC,CAAC,EAAEF,KAAK,CAACvB,KAAK;MAChB,CAAC,CAAC,CAAE;MACJS,KAAK,EAAE;QACLjB,IAAI,EAAE;UACJY,IAAI,EAAEP,MAAM,CAACI,KAAK,CAAC;UACnBa,MAAM,EAAEjB,MAAM,CAACI,KAAK,CAAC;UACrBc,WAAW,EAAE;QACf;MACF;IAAE,GAXGd,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAab,CAAC,eACFhC,OAAA,CAACF,aAAa;MACZqB,CAAC,EAAE,EAAG;MACNiB,CAAC,EAAE,EAAG;MACNC,WAAW,EAAC,YAAY;MACxBC,MAAM,EAAE,EAAG;MACXnC,IAAI,EAAEM,UAAW;MACjBW,KAAK,EAAE;QACLhB,MAAM,EAAE;UAAEkB,QAAQ,EAAE,EAAE;UAAEP,IAAI,EAAE;QAAQ,CAAC;QACvCwB,KAAK,EAAE;UAAExB,IAAI,EAAE;QAAQ,CAAC;QACxByB,MAAM,EAAE;UAAEf,MAAM,EAAE;QAAQ,CAAC;QAC3BV,IAAI,EAAE;MACR;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACW;AAEnB,CAAC;AAACS,EAAA,GA/DIxC,mBAAmB;AAiEzB,eAAeA,mBAAmB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}